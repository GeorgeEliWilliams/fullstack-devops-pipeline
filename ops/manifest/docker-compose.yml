services:
  frontend:
    container_name: ${APP_NAME}-frontend
    image: 314146303416.dkr.ecr.eu-west-1.amazonaws.com/tmp-project/frontend
    expose:
      - 3000
    ports:
      - 127.0.0.1:3000:3000
    restart: unless-stopped
    depends_on:
      - backend
    environment:
      APP_ENV: ${APP_ENV}
      BACKEND_API_HOST: ${BACKEND_API_HOST}
    networks:
      - frontend.com

  backend:
    container_name: ${APP_NAME}-backend
    image: 314146303416.dkr.ecr.eu-west-1.amazonaws.com/tmp-project/backend
    expose:
      - 9000
    restart: unless-stopped
    environment:
      APP_ENV: ${APP_ENV}
      APP_DEBUG: ${APP_DEBUG}
      APP_KEY: ${APP_KEY}
      DB_CONNECTION: ${DB_CONNECTION}
      DB_PORT: ${DB_PORT}
      DB_DATABASE: ${DB_DATABASE}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    # command: ["php", "artisan", "migrate", "--seed"]
    depends_on:
      database:
        condition: service_healthy
    networks:
      - frontend.com
      - backend.com

  database:
    image: mysql:8.4.3
    container_name: ${APP_NAME}-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    healthcheck:
      test:
        [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "database",
          "-uroot",
          "-p${MYSQL_ROOT_PASSWORD}",
        ]
      interval: 5s
      timeout: 20s
      retries: 5
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - backend.com

  nginx:
    image: nginx:alpine
    container_name: ${APP_NAME}-nginx
    restart: unless-stopped
    ports:
      - "80:80" # Forward HTTP traffic to Nginx
    volumes:
      - ./ops/nginx/nginx.conf:/etc/nginx/nginx.conf:ro # Ensure correct path and read-only
    depends_on:
      - backend # Ensure backend (PHP-FPM) starts before Nginx
    networks:
      - frontend.com

networks:
  frontend.com:
  backend.com:

volumes:
  mysql-data: # Persistent storage for MySQL
